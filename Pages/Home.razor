@page "/"
@using EventEaseApp.Models
@using EventEaseApp.Components
@using EventEaseApp.Services
@inject EventService EventService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject HttpClient Http

<h3>Events List</h3>
<ul class="list-group">
    @foreach (var evt in EventService.Events)
    {
        <li class="list-group-item">
            <img src="@evt.ImageUrl" alt="@evt.Name thumbnail" width="60" height="40" style="object-fit:cover; margin-right:10px; vertical-align:middle;" />
            <strong>@evt.Name (@evt.Date.ToString("MMM dd, yyyy"))</strong><br />
            <span>@evt.Location</span><br />
            <span>@evt.Description</span>
        </li>
    }
</ul>

@code {
    protected override async Task OnInitializedAsync()
    {
        var loaded = await LocalStorage.GetItemAsync<List<Event>>("events");
        if (loaded == null || loaded.Count == 0)
        {
            var response = await Http.GetAsync("data/events.json");
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var events = System.Text.Json.JsonSerializer.Deserialize<List<Event>>(json);
                if (events != null)
                {
                    await LocalStorage.SetItemAsync("events", events);
                    await EventService.LoadEventsAsync();
                }
            }
        }
        else
        {
            await EventService.LoadEventsAsync();
        }
    }

    private void HandleEditEvent(Event evt)
    {
        // Add logic to edit event (e.g., navigate to edit page or show form)
    }

    private void HandleRemoveEvent(Event evt)
    {
        EventService.Events.RemoveAll(e => e.Id == evt.Id);
    }
}
